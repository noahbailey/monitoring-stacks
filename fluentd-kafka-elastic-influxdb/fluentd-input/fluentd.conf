## System-wide settings
<system>
  log_level warn
</system>

## Forwarder input
<source>
  @type forward
  bind 0.0.0.0
  port 5000
</source>

## GeoIP filter for 
<filter events.*>
  @type geoip
  geoip_lookup_keys  src_ip
  backend_library geoip2_c
  <record>
    city            ${city.names.en["src_ip"]}
    latitude        ${location.latitude["src_ip"]}
    longitude       ${location.longitude["src_ip"]}
    country         ${country.iso_code["src_ip"]}
    country_name    ${country.names.en["src_ip"]}
    postal_code     ${postal.code["src_ip"]}
    region_code     ${subdivisions.0.iso_code["src_ip"]}
    region_name     ${subdivisions.0.names.en["src_ip"]}
  </record>
  skip_adding_null_record  true
</filter>

## Output to Kafka queue
# Metrics are output to a seperate queue
<match metrics.**>
  @type kafka2
  @log_level info
  brokers "#{ENV['KAFKA_BROKER']}"
  use_event_time true
  <format>
    @type json
  </format>
  topic_key tag
  default_topic metrics
</match>

## Output log data
<match **>
  @type kafka2
  @log_level info
  brokers "#{ENV['KAFKA_BROKER']}"
  use_event_time true
  <format>
    @type json
  </format>
  topic_key tag
  default_topic fluentd
</match>
