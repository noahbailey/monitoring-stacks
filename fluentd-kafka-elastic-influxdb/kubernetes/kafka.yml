---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    targetPort: 9092
    protocol: TCP
  selector:
    app: kafka

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: kafka
spec:
  serviceName: kafka-service
  replicas: 3
  updateStrategy: 
    type: RollingUpdate
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.13-2.7.0
        ports:
        - containerPort: 9092
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "export KAFKA_BROKER_ID=${HOSTNAME##*-}"]
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-service.default.svc.cluster.local"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-0.zookeeper-service:2181, zookeeper-1.zookeeper-service:2181, zookeeper-2.zookeeper-service:2181"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        - name: KAFKA_CREATE_TOPICS
          value: "fluentd:2:1, events:2:1, system:2:1, metrics:2:1"
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: /kafka/
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: rook-ceph-block
      resources:
        requests:
          storage: 10Gi
